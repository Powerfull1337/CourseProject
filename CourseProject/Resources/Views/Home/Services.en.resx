<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="200 грн" xml:space="preserve">
    <value>200 UAH</value>
  </data>
  <data name="400 грн" xml:space="preserve">
    <value>400 UAH</value>
  </data>
  <data name="600 грн" xml:space="preserve">
    <value>600 UAH</value>
  </data>
  <data name="Базова" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="Базове" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="Вітаємо у нашому барбешопі" xml:space="preserve">
    <value>Welcome to our barbershop</value>
  </data>
  <data name="Ви можете очікувати більше індивідуалізованого підходу до маскування обличчя. Це включає в себе використання високоякісних масок, які надають додаткові корисні властивості для шкіри, такі як зволоження та поживлення." xml:space="preserve">
    <value>You can expect a more personalised approach to facial masking. This includes the use of high-quality masks that provide additional skin benefits such as hydration and nourishment.</value>
  </data>
  <data name="Ви отримаєте більше індивідуалізованого підходу до гоління, можливо, включаючи гарячий рушник, багаторазовий бритвенний лезо, та/або використання якісних гоління кремів або олій." xml:space="preserve">
    <value>You will receive a more personalised shaving experience, possibly including a hot towel, a reusable razor blade, and/or the use of quality shaving creams or oils.</value>
  </data>
  <data name="Ви отримаєте базове оформлення волосся, яке може включати в себе просте укладання чи стрижку без додаткових послуг або стилізації." xml:space="preserve">
    <value>You will receive a basic hair design, which may include a simple styling or haircut without additional services or styling.</value>
  </data>
  <data name="Ви отримаєте базову процедуру нанесення маски на шкіру обличчя. Включає в себе базовий обранітий засіб для маски, який наносять на шкіру для очищення." xml:space="preserve">
    <value>You will receive a basic procedure for applying a mask to the skin. This includes the basic mask product of your choice, which is applied to the skin to cleanse it.</value>
  </data>
  <data name="Ви отримаєте вищий рівень обслуговування, який включає в себе розширені послуги, такі як гарячий паровий апарат, масаж голови, додаткову стилізацію чи інші додаткові послуги для більш розкішного гоління." xml:space="preserve">
    <value>You will receive a higher level of service, which includes enhanced services such as a hot steamer, scalp massage, additional styling or other extras for a more luxurious shave.</value>
  </data>
  <data name="Ви отримаєте преміумне обслуговування для маскування обличчя. Гарячий паровий апарат для відкриття пор, масаж обличчя, та використання найвищої якості масок для досягнення найкращого ефекту для вашої шкіри." xml:space="preserve">
    <value>You will receive a premium service for your facial. A hot steam machine to open pores, facial massage, and the use of the highest quality masks to achieve the best effect for your skin.</value>
  </data>
  <data name="Ви отримаєте преміумне оформлення волосся. Це може включати в себе розширені послуги, такі як гаряча укладка, використання професійних продуктів для стилізації, та більше складну стилізацію волосся." xml:space="preserve">
    <value>You will receive premium hair styling. This may include enhanced services such as hot styling, the use of professional styling products, and more complex hair styling.</value>
  </data>
  <data name="Ви отримуєте більше індивідуалізованого підходу до укладання волосся. Це може включати в себе використання якісних стайлінгових продуктів та більш ретельну стилізацію для досягнення бажаного ефекту." xml:space="preserve">
    <value>You will receive a basic hair design, which may include a simple styling or haircut without additional services or styling.</value>
  </data>
  <data name="Гоління" xml:space="preserve">
    <value>Shaving</value>
  </data>
  <data name="Головна" xml:space="preserve">
    <value>Main page</value>
  </data>
  <data name="Зачіска" xml:space="preserve">
    <value>Hairstyle.</value>
  </data>
  <data name="Класична" xml:space="preserve">
    <value>Classic</value>
  </data>
  <data name="Класичне" xml:space="preserve">
    <value>Classic</value>
  </data>
  <data name="Маска для лиця" xml:space="preserve">
    <value>Face mask</value>
  </data>
  <data name="Наші послуги" xml:space="preserve">
    <value>Our services</value>
  </data>
  <data name="Отримаєте базове гоління, яке включає в себе обробку бороди або вусів без додаткових послуг або додаткового часу на стилізацію." xml:space="preserve">
    <value>Get a basic shave that includes a beard or moustache treatment without additional services or extra time for styling.</value>
  </data>
  <data name="Послуги" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="Преміум" xml:space="preserve">
    <value>Premium</value>
  </data>
</root>